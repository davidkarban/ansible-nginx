---
- name: Load the OS specific variables
  include_vars: "{{ ansible_os_family }}.yml"

- name: Install the nginx packages 
  package:
    name: "{{ __nginx_pkgs + nginx_additional_pkgs }}"
    state: present

- name: Ensure vhosts directory do exists
  file:
    path: "{{ nginx_vhosts_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Load nginx proxy configuration if desired
  template:
    src: "proxy.conf.j2"
    dest: "{{ __nginx_vhosts_dir }}/proxy.conf"
  when: nginx_proxy or nginx_caching_proxy
  notify: reload nginx

- name: Ensure cache directory has proper permission
  file:
    path: "/var/cache/nginx"
    state: directory
    owner: nginx
    mode: "0755"
  when: nginx_caching_proxy

- name: Ensure nginx can proxy to another server if selinux is available
  seboolean:
    name: "httpd_can_network_connect"
    persistent: yes
    state: yes
  when:
    - nginx_caching_proxy
    - ansible_selinux is defined and ansible_selinux.config_mode != "disabled"

# Increase file open limits, if in caching proxy mode
# limits, supported from ansible 2.0
#- pam_limits: domain=nginx limit_type=soft limit_item=nofile value=10000
#- pam_limits: domain=nginx limit_type=hard limit_item=nofile value=30000
- name: Ensure nginx has enough file handles available for it`s use
  lineinfile:
    name: "/etc/security/limits.conf"
    line: "{{ item }}"
    backup: yes
    state: present
    insertbefore: "# End of file"
  with_items: 
    - "{{ nginx_owner }}    soft    nofile  10000"
    - "{{ nginx_owner }}    hard    nofile  30000"
  when: nginx_rlimit_nofile

- name: Generate dhparam for SSL if not available
  command: openssl dhparam -out /etc/nginx/dhparam.pem 4096
  args:
    creates: "/etc/nginx/dhparam.pem"

- name: Load up nginx configuration
  template:
    src: "nginx.conf.j2"
    dest: "{{ __nginx_conf_dir }}/nginx.conf"
    owner: root
    group: root
    mode: 0644
    backup: yes
  notify: reload nginx

- name: Ensure acme.sh configuration is installed
  template:
    src: "acme.conf.j2"
    dest: "{{ __nginx_conf_dir }}conf.d/acme.conf"
    owner: root
    group: root
    mode: 0644
    backup: yes
  notify: reload nginx

- name: Ensure acme dir do exists
  file: 
    path: "/var/www/acme/.well-known/acme-challenge"
    state: directory

- name: Ensure default vhost is removed
  file:
    path: "{{ __nginx_conf_dir }}conf.d/default.conf"
    state: absent
  notify: reload nginx

- name: Ensure nginx is started
  service:
    name: nginx
    state: started
    enabled: yes
